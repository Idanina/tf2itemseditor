<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema 
		
		Version 2.0
		
		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.
		
		Example:
		
		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">2.0</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
				<value>[base64 mime encoded serialized .NET Framework object]</value>
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
				<value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
				<comment>This is a comment</comment>
		</data>
								
		There are any number of "resheader" rows that contain simple 
		name/value pairs.
		
		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.
		
		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:
		
		
		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
						: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
						: and then encoded with base64 encoding.
		
		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
						: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
						: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
						: using a System.ComponentModel.TypeConverter
						: and then encoded with base64 encoding.
		-->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
	<data name="tf2itemsmanager" type="System.Resources.ResXFileRef, System.Windows.Forms">
		<value>..\Resources\tf2itemsmanager3.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
	</data>
	<data name="Form1_BtnSaveAsClick_All_files____">
		<value xml:space="preserve">All files|*.*</value>
	</data>
	<data name="Form1_SaveFile_Something_went_wrong_while_saving_">
		<value xml:space="preserve">Something went wrong while saving!</value>
	</data>
	<data name="Form1_SaveFile_Who_send_all_these_babies_to_fight__">
		<value xml:space="preserve">Who send all these babies to fight!?</value>
	</data>
	<data name="Form1_Button1Click2_Select_a_file_to_save_the_item_to">
		<value xml:space="preserve">Select a file to save the item to</value>
	</data>
	<data name="Form1_Button1Click2_Any_file____">
		<value xml:space="preserve">Any file|*.*</value>
	</data>
	<data name="Form1_button1_Click_Select_an_item">
		<value xml:space="preserve">Select an item</value>
	</data>
	<data name="Form1_button1_Click_Extracted_successfully_to_">
		<value><![CDATA[Extracted successfully to ]]></value>
	</data>
	<data name="Form1_button1_Click_">
		<value><![CDATA[
After saving, remember to place this in your \steamapps\username\team fortress 2\tf\scripts\items\ folder!]]></value>
	</data>
	<data name="Form1_button1_Click_Listen_up_">
		<value xml:space="preserve">Listen up!</value>
	</data>
	<data name="Form1_button1_Click_Something_went_wrong_when_extracting___">
		<value xml:space="preserve">Something went wrong when extracting :(</value>
	</data>
	<data name="Form1_button1_Click_Who_send_all_these_babies_to_fight__">
		<value xml:space="preserve">Who send all these babies to fight?!</value>
	</data>
	<data name="Form1_button1_Click_HLLib_dll_is_missing_from_the_program_folder_">
		<value xml:space="preserve">HLLib.dll is missing from the program folder!</value>
	</data>
	<data name="Form1_button1_Click_HLExtract_exe_is_missing_from_the_program_folder_">
		<value xml:space="preserve">HLExtract.exe is missing from the program folder!</value>
	</data>
	<data name="Form1_button1_Click_items_game_txt_items_game_txt_Team_Fortress_2_content_team_fortress_2_content_gcf">
		<value xml:space="preserve">items_game.txt|items_game.txt|Team Fortress 2 content|team fortress 2 content.gcf</value>
	</data>
	<data name="Form1_button1_Click_Select_items_game_txt_or_team_fortress_2_content_gcf">
		<value xml:space="preserve">Select items_game.txt or team fortress 2 content.gcf</value>
	</data>
</root>